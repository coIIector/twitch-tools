{"version":3,"sources":["App.js","index.js"],"names":["twitchApi","async","url","params","entries","entry","Object","value","Array","isArray","e","push","response","fetch","URLSearchParams","filter","undefined","referrer","mode","headers","json","console","log","USER_LOGIN_TO_ID","USER_LOGIN_TO_VODS","getVodsByLogin","login","toLowerCase","loginsToQuery","logins","length","data","user","id","getUserIds","user_id","first","type","error","vods","sort","sortVod","a","b","created_at","localeCompare","App","Component","constructor","props","super","handleChange","field","target","this","setState","handleClick","date","Date","state","dateString","isNaN","vod","resVod","nextVod","prevVod","startTime","duration","match","hours","minutes","seconds","parseInt","getTime","findVodByLoginAndDate","results","param","Math","floor","href","render","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Container","fluid","Row","Col","sm","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","disabled","onClick","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bcc4e245.chunk.js","sourcesContent":["import React, { Component } from \"react\"\n// import \"./App.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { Navbar, Nav, Form, Button, Container, Row, Col } from \"react-bootstrap\"\n\nconst TWITCH_CLIENT_ID = \"jzkbprff40iqj646a697cyrvl0zt2m6\"\n\nconst twitchApi = async (url, params) => {\n  const entries = []\n\n  for (const entry of Object.entries(params)) {\n    const value = entry[1]\n    if (Array.isArray(value)) {\n      for (const e of value) {\n        entries.push([entry[0], e])\n      }\n    } else {\n      entries.push(entry)\n    }\n  }\n\n  const response = await fetch(\n    `https://api.twitch.tv${url}?${new URLSearchParams(\n      entries.filter(([, value]) => value !== undefined)\n    )}`,\n    {\n      referrer: \"no-referrer\",\n      mode: \"cors\",\n      headers: {\n        \"Client-ID\": TWITCH_CLIENT_ID,\n      },\n    }\n  )\n\n  const json = await response.json()\n  console.log(json)\n  return json\n}\n\nconst USER_LOGIN_TO_ID = {}\nconst USER_LOGIN_TO_VODS = {}\n\nconst getUserIds = async logins => {\n  const loginsToQuery = logins.filter(function(login) {\n    return !(login in USER_LOGIN_TO_ID)\n  })\n\n  if (loginsToQuery.length === 0) return 0\n\n  const data = await twitchApi(\"/helix/users\", { login: loginsToQuery })\n  for (const user of data.data) {\n    USER_LOGIN_TO_ID[user.login.toLowerCase()] = user.id\n  }\n  return data.data.length\n}\n\nconst getVodsByLogin = async login => {\n  if (login in USER_LOGIN_TO_VODS) return USER_LOGIN_TO_VODS[login.toLowerCase()]\n\n  await getUserIds([login])\n  const user_id = USER_LOGIN_TO_ID[login.toLowerCase()]\n  if (!user_id) return null\n  // todo: more than 100\n  const data = await twitchApi(\"/helix/videos\", { user_id, first: 100, type: \"archive\" })\n  if (data.error) return null\n\n  const vods = data.data.sort(sortVod)\n  USER_LOGIN_TO_VODS[login] = vods\n  return vods\n}\n\nconst sortVod = (a, b) => {\n  return b.created_at.localeCompare(a.created_at)\n}\n\nconst findVodByLoginAndDate = async (login, date) => {\n  const vods = await getVodsByLogin(login)\n  if (!vods) return null\n\n  let resVod = null,\n    nextVod = null,\n    prevVod = null\n\n  // iterate from newest to oldest\n  for (const vod of vods) {\n    const startTime = new Date(vod.created_at)\n    if (startTime > date) {\n      nextVod = vod\n      continue\n    }\n\n    const [, hours, minutes, seconds] = vod.duration.match(/(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?/)\n    const duration =\n      parseInt(hours || \"0\") * 60 * 60 + parseInt(minutes || \"0\") * 60 + parseInt(seconds || \"0\")\n    const endTime = new Date(startTime.getTime() + duration * 1000)\n\n    if (endTime < date) {\n      prevVod = vod\n      break\n    }\n\n    resVod = vod\n    break\n  }\n\n  return { vod: resVod, nextVod, prevVod }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      login: \"\",\n      dateString: \"\",\n      date: null,\n      vod: null,\n      error: false,\n    }\n  }\n\n  handleChange = e => {\n    let field = e.target.id\n    let value = (e.target.value || \"\").toLowerCase()\n\n    this.setState({ [field]: value })\n  }\n\n  handleClick = async e => {\n    const date = new Date(this.state.dateString)\n    this.setState({ error: false })\n    if (isNaN(date)) return\n\n    this.setState({ date })\n\n    const vod = await findVodByLoginAndDate(this.state.login, date)\n    this.setState({ vod, error: !vod })\n  }\n\n  results = () => {\n    if (this.state.error) return <p>Error...</p>\n\n    if (this.state.vod) {\n      const { vod, nextVod, prevVod } = this.state.vod\n\n      if (vod) {\n        let url = vod.url\n        const diff = Math.floor(\n          (this.state.date.getTime() - new Date(vod.created_at).getTime()) / 1000\n        )\n\n        const param = \"?t=\" + diff + \"s\"\n        return <a href={url + param}> VOD found! </a>\n      }\n\n      return <p> No VOD found </p>\n    }\n\n    return null\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">Twitch Tools</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">VoD timestamp</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Container fluid>\n          <Row>\n            <Col sm=\"2\" />\n            <Col sm=\"10\">\n              <h1>VOD timestamp</h1>\n\n              <p>Find VOD timestamp by date</p>\n\n              <Form>\n                <Form.Group controlId=\"login\">\n                  <Form.Label>Twitch Login</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"ninja\"\n                    onChange={this.handleChange}\n                    value={this.state.login}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"dateString\">\n                  <Form.Label>Date</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"2020-02-02 12:34:56 UTC\"\n                    onChange={this.handleChange}\n                    value={this.state.dateString}\n                  />\n                </Form.Group>\n                <Button\n                  variant=\"primary\"\n                  disabled={!this.state.login || !this.state.dateString}\n                  onClick={this.handleClick}\n                >\n                  GO\n                </Button>\n                <div>{this.results()}</div>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}